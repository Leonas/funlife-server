require 'faker'

FactoryGirl.define do

  factory :conversation do

    #users                 (required but not generated by default)
    #conversation_messages (required but not generated by default)

    ignore do
      created_by nil
      to_users   nil
      message    nil
    end

    after(:build) do |conversation, evaluator|

        conversation.users << evaluator.created_by             if evaluator.created_by
        (conversation.users).concat(evaluator.to_users)        if evaluator.to_users && conversation.users

        if evaluator.message
          conversation.conversation_messages << create(:conversation_message, conversation: conversation, user: evaluator.created_by, message: evaluator.message)
        end
    end
  end


  factory :conversation_message do
    #user         (required but not generated by default)
    #conversation (required but not generated by default)
    message { Faker::Lorem.sentence(5)  }

    ignore do
      time_travel nil
    end

    before(:create) do |message, evaluator|
        Timecop.freeze(Date.today + evaluator.time_travel) if evaluator.time_travel
    end
    after(:create) do |message, evaluator|
      Timecop.return if evaluator.time_travel
    end
  end


  factory :conversation_user do
    conversation nil
    user nil
  end

end